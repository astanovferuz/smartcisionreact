{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/CardsDirectoryComponent.js","components/HrCompnent.js","components/JumbotronComponent.js","shared/procards.js","components/HomeComponent.js","components/AboutComponent.js","components/ContactComponent.js","coreapplogic/ExpandedComponent.js","coreapplogic/DecCom.js","shared/decisions.js","shared/arcdecs.js","coreapplogic/ExpandedArcDecComponent.js","components/ArchiveComponent.js","coreapplogic/EvaMyDecMakingComponent.js","coreapplogic/DemoPageComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","isNavOpen","toggleNav","bind","this","setState","Fragment","color","sticky","light","expand","className","href","onClick","isOpen","navbar","to","type","placeholder","aria-label","outline","Component","Footer","CardsDirectory","mappedCards","instCards","map","instCard","key","id","top","src","proCardImgUrl","alt","proCardTitle","proCardPara","HrLine","JumbotronComponent","fluid","PROCARDS","Home","procards","div","exit","animate","initial","variants","in","opacity","x","out","About","Contact","handleBlur","field","touched","firstName","lastName","phoneNum","email","agree","contactType","feedback","handleInputChange","handleSubmit","errors","length","test","includes","event","target","name","value","checked","console","log","JSON","stringify","preventDefault","validate","role","onSubmit","row","htmlFor","md","onBlur","onChange","invalid","size","offset","check","rows","ExpandedDecision","selectedDecision","handleDeleteDec","editDecision","editMode","toggleEvaModal","getEvaluatedDecision","decTitle","decPriority","decProblem","decSolution","DecCom","decision","mappedDecisions","decisions","rawProblem","displayDecProblem","substring","Card","Accordion","Toggle","as","eventKey","Collapse","Body","defaultActiveKey","DECISIONS","ARCDECS","Date","now","decSatisfied","decSolved","decDiff","decDiffExplain","rating","ExpArc","count","edit","activeColor","Archive","evaDecFilter","selectDecision","mappedArcs","arcDecs","EvaDec","combinedDecs","concat","notSolvedDecs","filter","dec","solvedDecs","filteredCombinedDecs","combinedDec","Demo","yesSatisfied","isArchiveOn","isEvaModalOpen","isModalOpen","progressBarValue","noSatisfied","handleChange","toggleModal","handleClick","switchEditMode","handleEdit","resetModal","setDecSat","decSatNull","ratingChanged","scrollToArc","React","createRef","scrolltoDec","handleArcClick","setArcOnTrue","handleDecClick","handleEvaluateSubmit","setEvaDecTrue","e","decToBeDel","newDecs","arcDec","current","scrollIntoView","behavior","block","newRating","decs","index","findIndex","isEvaModelOpen","filteredDecs","newDec","ref","toggle","autoComplete","disabled","onClosed","Main","exitBeforeEnter","path","component","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a561504b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavItem, Nav, Navbar, NavbarBrand, Button, Form, Collapse, NavbarToggler } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Header extends Component{\r\n    constructor(props)  {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false\r\n        }\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({isNavOpen: !this.state.isNavOpen});\r\n    }\r\n\r\n    render()    {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar color=\"light\" sticky=\"top\" light expand=\"lg\" className=\"p-0 navBack\">\r\n                     <div className=\"container pl-2\">\r\n                        <NavbarBrand href=\"/\">SmartCision</NavbarBrand>\r\n                            <NavbarToggler onClick={this.toggleNav} />\r\n                                <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                                    <Nav className=\"mr-auto\" navbar>\r\n                                        <NavItem>\r\n                                            <NavLink to=\"/home\" className=\"nav-link\">Home</NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink to=\"/aboutus\" className=\"nav-link\">About</NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink to=\"/demo\" className=\"nav-link\">Demo</NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink to=\"/contactus\" className=\"nav-link\">Contact</NavLink>\r\n                                        </NavItem>\r\n                                    </Nav>\r\n                                    <Form className=\"form-inline ml-lg-2 my-lg-0\">\r\n                                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                                        <Button color=\"success\" outline className=\"my-2\" type=\"submit\">Search</Button>\r\n                                    </Form>\r\n                                    <span>\r\n                                        <button className=\"ml-lg-4 a-button\" href=\"#\">Login</button>\r\n                                        <button className=\"ml-lg-3 a-button\" href=\"#\">Sign Up</button>\r\n                                    </span>\r\n                                </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Footer()   {\r\n    return(\r\n        <React.Fragment>\r\n            <footer className=\"page-footer font-small stylish-color-dark pt-4 mt-0\">\r\n\r\n                <div className=\"container text-center text-md-left\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-4 mx-auto\">\r\n\r\n                    <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Leave Your Feedback</h5>\r\n                    <p>Your experience with our app is our top priority. We would like to hear from you on how we can improve user experience.</p>\r\n                    <Link to=\"/contactus\" className=\"btn btn-yellow sf\">Send Feedback</Link>\r\n\r\n                    </div>\r\n\r\n                    <hr className=\"clearfix w-100 d-md-none\" />\r\n\r\n                    <div className=\"col-md-2 mx-auto\">\r\n\r\n                    <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Menu</h5>\r\n\r\n                    <ul className=\"list-unstyled\">\r\n                        <li>\r\n                        <Link to=\"/home\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                        <Link to=\"/aboutus\">About</Link>\r\n                        </li>\r\n                        <li>\r\n                        <Link to=\"/demo\">Demo</Link>\r\n                        </li>\r\n                        <li>\r\n                        <Link to=\"/contactus\">Contact</Link>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    </div>\r\n\r\n                    <hr className=\"clearfix w-100 d-md-none\" />\r\n\r\n                    <div className=\"col-md-2 mx-auto\">\r\n\r\n                    <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Location</h5>\r\n\r\n                    <p>#404, A-10, Ghoroob, Mirdif District, Tripoli Street, Dubai, UAE.</p>\r\n\r\n                    </div>\r\n\r\n                    <hr className=\"clearfix w-100 d-md-none\" />\r\n\r\n                    <div className=\"col-md-2 mx-auto p-0\">\r\n\r\n                    <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Contact</h5>\r\n\r\n                    <p>Phone: +971 777 000 745</p>\r\n                    <p>info@smartcision.com</p>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                </div>\r\n                    <ul className=\"list-unstyled d-flex justify-content-center mt-4\">\r\n                    <li className=\"footer-social-btn bs\">\r\n                        <a href=\"http://facebook.com\" className=\"btn btn-facebook roundicon\"><i className=\"fa fa-lg fa-facebook cent\"></i></a>\r\n                    </li>\r\n                    <li className=\"footer-social-btn bs\">\r\n                        <a href=\"http://instagram.com\" className=\"btn btn-google roundicon\"><i className=\"fa fa-lg fa-instagram cent\"></i></a>\r\n                    </li>\r\n                    <li className=\"footer-social-btn bs\">\r\n                        <a href=\"http://twiter.com\" className=\"btn btn-twitter roundicon\"><i className=\"fa fa-lg fa-twitter cent\"></i></a>\r\n                    </li>\r\n                    <li className=\"footer-social-btn bs\">\r\n                        <a href=\"http://google.com\" className=\"btn btn-google roundicon\"><i className=\"fa fa-lg fa-google-plus cent\"></i></a>\r\n                    </li>\r\n                    <li className=\"footer-social-btn bs\">\r\n                        <a href=\"http://linkedin.com\" className=\"btn btn-linkedin roundicon\"><i className=\"fa fa-lg fa-linkedin cent\"></i></a>\r\n                    </li>\r\n                    </ul>\r\n\r\n                    <hr />\r\n\r\n                    <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n                    <a href=\"https://mdbootstrap.com/\"> Smartcision.com</a>\r\n                </div>\r\n\r\n            </footer>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { Card, CardImg, CardBody, CardText } from \"reactstrap\";\r\n\r\nclass CardsDirectory extends Component{\r\n    render()    {\r\n        const mappedCards = this.props.instCards.map(instCard =>    {\r\n            return(\r\n                <React.Fragment key={instCard.id}>\r\n                    <div className=\"col-md-6 card-prop mb-4\">\r\n                        <Card outline color=\"primary\" className=\"cardBor-radius scaleCard\">\r\n                            <CardImg top src={instCard.proCardImgUrl} alt={instCard.proCardTitle} />\r\n                            <div className=\"cardTitle text-center mb-0\">{instCard.proCardTitle}</div>\r\n                            <CardBody>\r\n                                <CardText>{instCard.proCardPara}</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h2 className=\"headline text-center mt-5 mb-4\">One of a kind app to refine your decision-making!</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    {mappedCards}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CardsDirectory;","import React from \"react\";\r\n\r\nfunction HrLine()   {\r\n    return  <hr className=\"hr-exam mt-5\"></hr>\r\n}\r\n\r\nexport default HrLine;","import React from \"react\";\r\nimport { Jumbotron } from \"reactstrap\";\r\n\r\nfunction JumbotronComponent()    {\r\n    return(\r\n        <Jumbotron fluid className=\"jumbo-mt-zero\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col mt-4\">\r\n                        <h1 className=\"text-center\">Smart Decisions</h1>\r\n                        <p className=\"text-center\">Don't make the same mistake twice. Make smart decisions.</p>\r\n                    </div>\r\n                </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col d-flex justify-content-center\">\r\n                        <a href=\"#first-main-headline\" className=\"btn btn-warning fontBold mt-3 btn-lg btn-yellow\">Learn More</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nexport default JumbotronComponent;","export const PROCARDS = [\r\n    {\r\n        id: 0,\r\n        proCardTitle: \"Identify a problem\",\r\n        proCardPara: \"Make an entry describing your problem in details.\",\r\n        proCardImgUrl: \"assets/images/question.jpg\"\r\n    },\r\n    {\r\n        id: 1,\r\n        proCardTitle: \"Make a decision\",\r\n        proCardPara: \"List your the solution to the problem stating pros and cons.\",\r\n        proCardImgUrl: \"assets/images/decision.jpg\"\r\n    },\r\n    {\r\n        id: 2,\r\n        proCardTitle: \"Execute your decision\",\r\n        proCardPara: \"Implement your solution and document your experience.\",\r\n        proCardImgUrl: \"assets/images/execution.jpg\"\r\n    },\r\n    {\r\n        id: 3,\r\n        proCardTitle: \"Evaluate your decision\",\r\n        proCardPara: \"Rate your decision and whether or not it solved yoStep.\",\r\n        proCardImgUrl: \"assets/images/evaluation.jpg\"\r\n    }\r\n]","import React, { Component } from \"react\";\r\nimport CardsDirectory from \"./CardsDirectoryComponent\";\r\nimport HrLine from \"./HrCompnent\";\r\nimport JumbotronComponent from \"./JumbotronComponent\";\r\nimport { PROCARDS } from \"../shared/procards\"\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass Home extends Component    {\r\n    constructor(props)  {\r\n        super(props);\r\n\r\n        this.state = {\r\n            procards: PROCARDS\r\n        }\r\n    }\r\n    render()    {\r\n        const pageTransition = {\r\n            in: {\r\n                opacity: 1,\r\n                x: 0\r\n            },\r\n            out: {\r\n                opacity: 0,\r\n                x: \"-5%\"\r\n            }\r\n        }\r\n        return(\r\n            <motion.div exit=\"out\" animate=\"in\" initial=\"out\" variants={pageTransition}>\r\n                <JumbotronComponent />\r\n                <HrLine />\r\n                <CardsDirectory instCards={this.state.procards} />\r\n            </motion.div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction About()    {\r\n    const pageTransition = {\r\n        in: {\r\n            opacity: 1,\r\n            x: 0\r\n        },\r\n        out: {\r\n            opacity: 0,\r\n            x: \"-5%\"\r\n        }\r\n    }\r\n    return(\r\n        <motion.div exit=\"out\" animate=\"in\" initial=\"out\" variants={pageTransition}>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4 className=\"mt-4 mx-5\">About Us</h4>\r\n                        <p className=\"font-small mx-5\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Laoreet sit amet cursus sit amet dictum sit amet justo. Elementum eu facilisis sed odio morbi quis commodo. Porta non pulvinar neque laoreet suspendisse. Fermentum dui faucibus in ornare quam viverra orci. Ut etiam sit amet nisl. Tellus in metus vulputate eu scelerisque felis. Elit sed vulputate mi sit amet mauris commodo. Arcu dui vivamus arcu felis bibendum. Viverra suspendisse potenti nullam ac tortor vitae purus faucibus. Ut sem nulla pharetra diam sit amet nisl. Fames ac turpis egestas maecenas pharetra convallis posuere. Turpis egestas integer eget aliquet. Posuere morbi leo urna molestie at elementum.</p>\r\n                        <h4 className=\"mt-4 mx-5\">Our Mission</h4>\r\n                        <p className=\"font-small mx-5\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Laoreet sit amet cursus sit amet dictum sit amet justo. Elementum eu facilisis sed odio morbi quis commodo. Porta non pulvinar neque laoreet suspendisse. Fermentum dui faucibus in ornare quam viverra orci. Ut etiam sit amet nisl. Tellus in metus vulputate eu scelerisque felis. Elit sed vulputate mi sit amet mauris commodo. Arcu dui vivamus arcu felis bibendum. Viverra suspendisse potenti nullam ac tortor vitae purus faucibus. Ut sem nulla pharetra diam sit amet nisl. Fames ac turpis egestas maecenas pharetra convallis posuere. Turpis egestas integer eget aliquet. Posuere morbi leo urna molestie at elementum.</p>\r\n                        <h4 className=\"mt-4 mx-5\">Our Core Values</h4>\r\n                        <p className=\"font-small mx-5\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Laoreet sit amet cursus sit amet dictum sit amet justo. Elementum eu facilisis sed odio morbi quis commodo. Porta non pulvinar neque laoreet suspendisse. Fermentum dui faucibus in ornare quam viverra orci. Ut etiam sit amet nisl. Tellus in metus vulputate eu scelerisque felis. Elit sed vulputate mi sit amet mauris commodo. Arcu dui vivamus arcu felis bibendum. Viverra suspendisse potenti nullam ac tortor vitae purus faucibus. Ut sem nulla pharetra diam sit amet nisl. Fames ac turpis egestas maecenas pharetra convallis posuere. Turpis egestas integer eget aliquet. Posuere morbi leo urna molestie at elementum.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props)  {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            phoneNum: \"\",\r\n            email: \"\",\r\n            agree: false,\r\n            contactType: \"By Phone\",\r\n            feedback: \"\",\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleBlur = (field) => () =>   {\r\n        this.setState({\r\n            touched: {...this.state.touched, [field]: true}\r\n        });\r\n    }\r\n\r\n    validate(firstName, lastName, phoneNum, email)  {\r\n        const errors = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            phoneNum: \"\",\r\n            email: \"\"\r\n        }\r\n\r\n        if (this.state.touched.firstName)   {\r\n            if (firstName.length < 2)   {\r\n                errors.firstName = \"First name must be at least 2 characters.\"\r\n            }   else if (firstName.length > 15) {\r\n                errors.firstName = \"First name must be 15 characters or less\"\r\n            }\r\n        }\r\n\r\n        if (this.state.touched.lastName)    {\r\n            if (lastName.length < 2)   {\r\n                errors.lastName = \"First name must be at least 2 characters.\"\r\n            }   else if (lastName.length > 15) {\r\n                errors.lastName = \"First name must be 15 characters or less\"\r\n            }\r\n        }\r\n\r\n        const reg = /^\\d+$/;\r\n\r\n        if (this.state.touched.phoneNum && !reg.test(phoneNum)) {\r\n            errors.phoneNum = \"Phone number should contain numbers only\"\r\n        }\r\n\r\n        if (this.state.touched.email && !email.includes(\"@\"))   {\r\n            errors.email = \"Email must include @\"\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    handleInputChange(event)    {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(\"Current state is: \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n\r\n        const errors = this.validate(this.state.firstName, this.state.lastName, this.state.phoneNum, this.state.email);\r\n        const pageTransition = {\r\n            in: {\r\n                opacity: 1,\r\n                x: 0\r\n            },\r\n            out: {\r\n                opacity: 0,\r\n                x: \"-5%\"\r\n            }\r\n        }\r\n\r\n    return (\r\n        <motion.div exit=\"out\" animate=\"in\" initial=\"out\" variants={pageTransition}>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h2 className=\"mt-3\">Contact Us</h2>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row row-content align-items-center\">\r\n                <div className=\"col-sm-4\">\r\n                    <h5>Address</h5>\r\n                    <address>\r\n                        Building A-10<br />\r\n                        Ghoroob, Mirdif area, Dubai<br />\r\n                        UAE\r\n                    </address>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-234-567-8910</a><br />\r\n                    <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> contact@smartcision.com</a>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={this.state.firstName}\r\n                                        onBlur={this.handleBlur(\"firstName\")}\r\n                                        onChange={this.handleInputChange}\r\n                                        invalid={errors.firstName} />\r\n                                    <FormFeedback>{errors.firstName}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={this.state.lastName}\r\n                                        onBlur={this.handleBlur(\"lastName\")}\r\n                                        onChange={this.handleInputChange}\r\n                                        invalid={errors.lastName}  />\r\n                                    <FormFeedback>{errors.lastName}</FormFeedback>\r\n                                </Col>                        \r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        value={this.state.phoneNum}\r\n                                        onBlur={this.handleBlur(\"phoneNum\")}\r\n                                        onChange={this.handleInputChange}\r\n                                        invalid={errors.phoneNum}  />\r\n                                    <FormFeedback>{errors.phoneNum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onBlur={this.handleBlur(\"email\")}\r\n                                        onChange={this.handleInputChange}\r\n                                        invalid={errors.email}  />\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 4, offset: 2}}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\"\r\n                                                name=\"agree\"\r\n                                                checked={this.state.agree}\r\n                                                onChange={this.handleInputChange} /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Input type=\"select\" name=\"contactType\"\r\n                                            value={this.state.contactType}\r\n                                            onChange={this.handleInputChange}>\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"feedback\" name=\"feedback\"\r\n                                        rows=\"12\"\r\n                                        value={this.state.feedback}\r\n                                        onChange={this.handleInputChange}></Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" className=\"btn-yellow text-black\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        </motion.div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport { Badge, Button } from \"reactstrap\";\r\n\r\nfunction ExpandedDecision({selectedDecision, handleDeleteDec, editDecision, editMode, toggleEvaModal, getEvaluatedDecision}) {\r\n    return(\r\n        <div className=\"exDecisionBack p-3 borderYellow\">\r\n            <h6 className=\"text-white expandCardTitle\">{selectedDecision.decTitle}\r\n            {selectedDecision.decPriority === \"low\" ? <Badge className=\"ml-2\" color=\"success\">Low Priority</Badge> : \r\n             selectedDecision.decPriority === \"mid\" ? <Badge className=\"ml-2\" color=\"warning\">Medium Priority</Badge> :\r\n             selectedDecision.decPriority === \"high\" ? <Badge className=\"ml-2\" color=\"danger\">High Priority</Badge> : null}\r\n            </h6>\r\n            <p className=\"text-aqua\">Problem</p>\r\n            <p className=\"text-white fontSmall mt-2\">{selectedDecision.decProblem}</p>\r\n            <p className=\"text-aqua\">Solution</p>\r\n            <p className=\"text-white fontSmall\">{selectedDecision.decSolution}</p>\r\n            <Button onClick={() => {toggleEvaModal(); getEvaluatedDecision(selectedDecision)}} size=\"sm\" className=\"fontBold backWhite text-black primButton\">Evaluate Decision</Button>\r\n            <Button onClick={() => {\r\n                editDecision(selectedDecision);\r\n                editMode();\r\n            }} size=\"sm ml-2\" className=\"fontBold backWhite text-black warnButton\">Edit Decision</Button>\r\n            <Button onClick={() => handleDeleteDec(selectedDecision.id)} size=\"sm ml-2\" className=\"fontBold backWhite text-black danButton\">Delete Decision</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpandedDecision;","import React, { Component } from \"react\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\nimport { Button, Badge } from \"reactstrap\";\r\nimport ExpandedDecision from \"./ExpandedComponent\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\n\r\nclass DecCom extends Component  {\r\n    constructor(props)  {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDecision: null\r\n        }\r\n    }\r\n\r\n\r\n    selectedDecision(decision)   {\r\n        this.setState({\r\n            selectedDecision: decision\r\n        });\r\n    }\r\n    \r\n    render()    {\r\n            const mappedDecisions = this.props.decisions.map(decision => {\r\n            let rawProblem = decision.decProblem;\r\n            let truncLength = 100;\r\n            let displayDecProblem = rawProblem.substring(0, truncLength);\r\n            return(\r\n                <Fade in key={decision.id}>\r\n                <div>\r\n                    <Card className=\"border-0 roundCorners\">\r\n                        <Accordion.Toggle as={Card.Header} eventKey={decision.id} className=\"btn-yellow fontBold someBorder decisionName\">\r\n                        <span><i className=\"fa fa-check-square-o\" /></span>&nbsp;\r\n                        {decision.decTitle}\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey={decision.id} className=\"decBodyBack text-white\">\r\n                        <Card.Body>\r\n                            <h6 className=\"colCardPriority\">Priority -\r\n                            {decision.decPriority === \"low\" ? <Badge className=\"ml-1 mt-1\" color=\"success\">low</Badge> : \r\n                            decision.decPriority === \"mid\" ? <Badge className=\"ml-1 mt-1\" color=\"warning\">mid</Badge> : \r\n                            decision.decPriority === \"high\" ? <Badge className=\"ml-1 mt-1\" color=\"danger\">high</Badge> : null }\r\n                            </h6>\r\n                            { rawProblem.length > truncLength ? displayDecProblem + \"...\" : rawProblem }\r\n                            <br />\r\n                            <Button onClick={() => this.selectedDecision(decision)} className=\"mt-2 fontBold\" size=\"sm\" color=\"success\">Expand Decision</Button>\r\n                            <Button onClick={() => {\r\n                                    this.props.editDecision(decision);\r\n                                    this.props.editMode();\r\n                            }} className=\"mt-2 ml-2 fontBold\" size=\"sm\" color=\"warning\">Edit Decision</Button>\r\n                            <Button onClick={() => this.props.handleDeleteDec(decision.id)} className=\"mt-2 ml-2 fontBold\" size=\"sm\" color=\"danger\">Delete Decision</Button>\r\n                        </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card> \r\n                </div>\r\n                </Fade>\r\n            )\r\n        })\r\n            return(\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 decisionCol mb-5 botMar\">\r\n                        <div className=\"scrollbar ml-0 roundCorners\" id=\"style-2\">\r\n                            <div className=\"force-overflow\">\r\n                                <Accordion defaultActiveKey={null}>\r\n                                    <Stagger in>\r\n                                        {mappedDecisions}\r\n                                    </Stagger>\r\n                                </Accordion>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 decisionCol mb-5\">\r\n                       {this.state.selectedDecision !== null ? \r\n                       <ExpandedDecision\r\n                       getEvaluatedDecision={this.props.getEvaluatedDecision}\r\n                       toggleEvaModal={this.props.toggleEvaModal}\r\n                       editDecision={this.props.editDecision}\r\n                       editMode={this.props.editMode}\r\n                       handleDeleteDec={this.props.handleDeleteDec} \r\n                       selectedDecision={this.state.selectedDecision}/> : \r\n                       null }\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n    \r\n}\r\n\r\nexport default DecCom;","export const DECISIONS = [\r\n    {\r\n        id: 1,\r\n        decTitle: \"Buying a new car\",\r\n        decProblem: \"I want to buy a new car, but I am on budget. My old car isn't bad but I just want this new car so much. In fact, I need this money for my 2nd year in college but it's like a year away from now and I think I will be able to earn it back in a year's time. I am not sure if it's right tho. I really really want a new car.\",\r\n        decSolution: \"I think I am gonna buy the car and will try to make this money back before my college starts\",\r\n        decPriority: \"high\"\r\n    },\r\n    {\r\n        id: 2,\r\n        decTitle: \"Friends Night Out\",\r\n        decProblem: \"My friends have been inviting me to this new bar they all go to. They always make it on Sundays because they don't have to work the next day. But I do need to work on Mondays and I feel super tired if I don't get good sleep before my long shift. I feel bad to say no to my friends, since I am afraid they will stop inviting me, but at the same time I don't want to compromise my employment. What should I do?\",\r\n        decSolution: \"I am gonng join my friends this time, but I won't stay until late\",\r\n        decPriority: \"mid\"\r\n    },\r\n    {\r\n        id: 3,\r\n        decTitle: \"Renting out a part of my space\",\r\n        decProblem: \"I live in a two bedroom apartment and I never really keep anything in the other bedroom and don't even walk in there. So I thought it'd be a good ideat to rent that room out to someone, so I can make some money on the side. There are many colleges around my place and some students always look for accommodation in this area. I am still thinking though whether or not it's a good idea. I kinda like living alone too\",\r\n        decSolution: \"I decided to rent the second room out to this student from New Jersey. The room is empty anyways and I have no other way to make some extra cash at the moment.\",\r\n        decPriority: \"low\"\r\n    },\r\n    {\r\n        id: 4,\r\n        decTitle: \"Lending money to my friend\",\r\n        decProblem: \"My friend has been asking me to lend him some money. Not a lot. Something like 200 bucks. But I am worried about getting it back. I know he doesn't work and is not even looking for job, so how would he be able to return the money? I don't mind helping out a friend, but I also want him to keep his end of the deal since I don't like to chase my own money. I am not sure if it's right or wrong to lend him money.\",\r\n        decSolution: \"I decided to lend him money. I know him for many years and I hope he is a man of his word.\",\r\n        decPriority: \"high\"\r\n    },\r\n]","export const ARCDECS = [\r\n    {\r\n    id: Date.now(),\r\n    decTitle: \"Renting a car in unfamiliar area\",\r\n    decProblem: \"I moved to another city in my state for couple of months until I take care of my business here and I am thinking of renting a car here although I have an amazing bike I brought with me but I feel like driving is much better and convenient. I don't know the area well though.\",\r\n    decPriority: \"low\",\r\n    decSolution: \"I decided to rent a car, because I think it more convenient. Besides, I am too lazy to ride a bike.\",\r\n    decSatisfied: \"no\",\r\n    decSolved: \"no\",    \r\n    decDiff: \"yes\",\r\n    decDiffExplain: \"I would't have rented a car. I got a lot off traffic fines cuz I didn't know the area well and drove erratically trying to figure out where to turn. Spent a lot of money on both the car and fines. Never doing that again.\",\r\n    rating: 1\r\n}\r\n]","import React from \"react\";\r\nimport { Badge } from \"reactstrap\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\n\r\nfunction ExpArc({selectedDecision})  {\r\n    return(\r\n        <div className=\"exDecisionBack p-3 borderYellow\">\r\n            <h6 className=\"text-white expandCardTitle\">{selectedDecision.decTitle}\r\n            {selectedDecision.decPriority === \"low\" ? <Badge className=\"ml-2\" color=\"success\">Low Priority</Badge> : \r\n             selectedDecision.decPriority === \"mid\" ? <Badge className=\"ml-2\" color=\"warning\">Medium Priority</Badge> :\r\n             selectedDecision.decPriority === \"high\" ? <Badge className=\"ml-2\" color=\"danger\">High Priority</Badge> : null}\r\n            </h6>\r\n            <p className=\"text-aqua\">Problem</p>\r\n            <p className=\"text-white fontSmall mt-2\">{selectedDecision.decProblem}</p>\r\n            <p className=\"text-aqua\">Solution</p>\r\n            <p className=\"text-white fontSmall mb-0\">{selectedDecision.decSolution}</p>\r\n            <br />\r\n            <p className=\"text-aqua fontSmall mb-0\">Are you satisfied with your decision?</p>\r\n            {selectedDecision.decSatisfied === \"yes\" ? <Badge className=\"ml-1 mt-1\" color=\"success\">{selectedDecision.decSatisfied}</Badge> : <Badge className=\"ml-1 mt-1\" color=\"danger\">{selectedDecision.decSatisfied}</Badge> }\r\n            <p className=\"text-aqua fontSmall mb-0\">Were you able to solve your problem with this decision?</p>\r\n            {selectedDecision.decSolved === \"yes\" ? <Badge className=\"ml-1 mt-1\" color=\"success\">{selectedDecision.decSolved}</Badge> : <Badge className=\"ml-1 mt-1\" color=\"danger\">{selectedDecision.decSolved}</Badge> }\r\n            <p className=\"text-aqua fontSmall mb-0\">Is there anything you would have done differently?</p>\r\n            {selectedDecision.decDiff === \"yes\" ? <Badge className=\"ml-1 mt-1\" color=\"success\">{selectedDecision.decDiff}</Badge> : <Badge className=\"ml-1 mt-1\" color=\"danger\">{selectedDecision.decDiff}</Badge> }\r\n            <p className=\"text-aqua fontSmall mb-0\">Please Explain</p>\r\n            <p className=\"text-white fontSmall mb-0\">{selectedDecision.decDiffExplain}</p>\r\n            <p className=\"text-white fontSmall mt-3 mb-0\">Your decision's rating</p>\r\n            <ReactStars\r\n                className=\"my-0\"\r\n                value={selectedDecision.rating}\r\n                count={5}\r\n                edit={false}\r\n                size={30}\r\n                activeColor=\"#ffd700\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpArc;","import React, { Component } from \"react\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\nimport { Button, Badge } from \"reactstrap\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport ExpArc from \"../coreapplogic/ExpandedArcDecComponent\";\r\nimport \"../coreapplogicstyles/demopage.css\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\n\r\nclass Archive extends Component  {\r\n    constructor(props)  {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDecision: null,\r\n            evaDecFilter: false\r\n        }\r\n\r\n        this.selectDecision = this.selectDecision.bind(this);\r\n    }\r\n\r\n    selectDecision(decision)    {\r\n        this.setState({\r\n            selectedDecision: decision\r\n        });\r\n    }   \r\n\r\n    render()    {\r\n    const mappedArcs = this.props.arcDecs.map(decision => {\r\n        let rawProblem = decision.decProblem;\r\n        let truncLength = 100;\r\n        let displayDecProblem = rawProblem.substring(0, truncLength);\r\n        return(\r\n            <Fade in key={decision.id}>\r\n                <div key={decision.id}>\r\n                    <Card className=\"border-0 roundCorners\">\r\n                        <Accordion.Toggle as={Card.Header} eventKey={decision.id} className=\"btn-yellow fontBold someBorder decisionName\">\r\n                        <span><i className=\"fa fa-check-square-o\" /></span>&nbsp;\r\n                        {decision.decTitle}\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey={decision.id} className=\"decBodyBack text-white\">\r\n                        <Card.Body>\r\n                            <h6 className=\"colCardPriority\">Priority -\r\n                            {decision.decPriority === \"low\" ? <Badge className=\"ml-1 mt-1\" color=\"success\">low</Badge> : \r\n                            decision.decPriority === \"mid\" ? <Badge className=\"ml-1 mt-1\" color=\"warning\">mid</Badge> : \r\n                            decision.decPriority === \"high\" ? <Badge className=\"ml-1 mt-1\" color=\"danger\">high</Badge> : null }\r\n                            </h6>\r\n                            { rawProblem.length > truncLength ? displayDecProblem + \"...\" : rawProblem }\r\n                            <br />\r\n                            Are you satisfied with your decision?\r\n                            <br />\r\n                            {decision.decSatisfied === \"yes\" ? <Badge className=\"ml-1 mt-1\" color=\"success\">{decision.decSatisfied}</Badge> : <Badge className=\"ml-1 mt-1\" color=\"danger\">{decision.decSatisfied}</Badge> }\r\n                            <br />\r\n                            Were you able to solve your problem with this decision?\r\n                            <br />\r\n                            {decision.decSolved === \"yes\" ? <Badge className=\"ml-1 mt-1\" color=\"success\">{decision.decSolved}</Badge> : <Badge className=\"ml-1 mt-1\" color=\"danger\">{decision.decSolved}</Badge> }\r\n                            <br />\r\n                            Is there anything you would have done differently?\r\n                            <br />\r\n                            {decision.decDiff === \"yes\" ? <Badge className=\"ml-1 mt-1\" color=\"success\">{decision.decDiff}</Badge> : <Badge className=\"ml-1 mt-1\" color=\"danger\">{decision.decDiff}</Badge> }\r\n                            <br />\r\n                            Your decision's rating\r\n                            <br />\r\n                            <ReactStars\r\n                                value={decision.rating}\r\n                                count={5}\r\n                                edit={false}\r\n                                size={30}\r\n                                activeColor=\"#ffd700\"\r\n                            />\r\n                            <br />\r\n                            <Button onClick={() => this.selectDecision(decision)} className=\"mt-2 fontBold\" size=\"sm\" color=\"success\">Expand Decision</Button>\r\n                        </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card> \r\n                </div>\r\n            </Fade>\r\n        )\r\n    })\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 decisionCol mb-5 mar-y\">\r\n                        <h2 className=\"text-center text-white gray-box py-2\">Archived Decisions</h2>\r\n                    <div className=\"scrollbar-arc ml-0 mt-2 roundCorners\" id=\"style-2\">\r\n                        <div className=\"force-overflow\">\r\n                            <Accordion defaultActiveKey={null}>\r\n                                <Stagger in>\r\n                                    {mappedArcs}\r\n                                </Stagger>\r\n                            </Accordion>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6 decisionCol mb-5 mar-y\">\r\n                    {this.state.selectedDecision !== null ? <ExpArc selectedDecision={this.state.selectedDecision} /> : null }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Archive;","import React from \"react\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\nimport { Badge, Alert } from \"reactstrap\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\n\r\nfunction EvaDec(props)   {\r\n\r\n        const combinedDecs = props.decisions.concat(props.arcDecs);\r\n        const notSolvedDecs = combinedDecs.filter(dec => dec.decSolved === \"no\");\r\n        const solvedDecs = combinedDecs.filter(dec => dec.decSolved === \"yes\");\r\n        const filteredCombinedDecs = combinedDecs.map(combinedDec => {\r\n            return(\r\n                <Fade in key={combinedDecs.id}>\r\n                    <Card key={combinedDec.id} className=\"border-0 roundCorners\">\r\n                        <Accordion.Toggle as={Card.Header} eventKey={combinedDec.id} className=\"btn-yellow fontBold someBorder decisionName\">\r\n                        <span><i className=\"fa fa-check-square-o\" /></span>&nbsp;\r\n                        {combinedDec.decTitle} - {combinedDec.decSolved === \"no\" ? <Badge color=\"danger\">Bad Decision</Badge> : \r\n                                                combinedDec.decSolved === \"yes\" ? <Badge color=\"success\">Good Decision</Badge> :\r\n                                                <React.Fragment><Badge color=\"secondary\">Under Evaluation</Badge>&nbsp;<div className=\"spinner-border spinner-border-sm text-secondary\" role=\"status\"/></React.Fragment>}\r\n                        </Accordion.Toggle>\r\n                    </Card>\r\n                </Fade>\r\n            )\r\n        })\r\n        return(\r\n            <div className=\"col decisionCol mb-5 mar-y\">\r\n                        <h2 className=\"text-center text-white gray-box py-2\">Your Decision Making Skills</h2>\r\n                        {notSolvedDecs.length > solvedDecs.length ? \r\n                            <Alert className=\"text-center mb-0\" color=\"danger\">\r\n                                You decisions have not been good lately. Work on your decision making skills.\r\n                            </Alert>\r\n                            : notSolvedDecs.length < solvedDecs.length ?\r\n                            <Alert className=\"text-center mb-0\" color=\"success\">\r\n                                You decisions making is good. Keep it up!\r\n                            </Alert>\r\n                            : notSolvedDecs.length === solvedDecs.length ?\r\n                            <Alert className=\"text-center mb-0\" color=\"warning\">\r\n                                You need to work on your decision making. Every second decision you make is wrong.\r\n                            </Alert>\r\n                            : null\r\n                        }\r\n                        \r\n                    <div className=\"scrollbar-arc ml-0 mt-2 roundCorners\" id=\"style-2\">\r\n                        <div className=\"force-overflow\">\r\n                            <Accordion defaultActiveKey={null}>\r\n                                <Stagger in>\r\n                                    {filteredCombinedDecs}\r\n                                </Stagger>\r\n                            </Accordion>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default EvaDec;","import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label, Col, ButtonGroup, FormFeedback } from \"reactstrap\";\r\nimport DecCom from \"./DecCom\";\r\nimport { DECISIONS } from \"../shared/decisions\";\r\nimport { ARCDECS } from \"../shared/arcdecs\"\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport Archive from \"../components/ArchiveComponent\";\r\nimport EvaDec from \"./EvaMyDecMakingComponent\";\r\nimport \"../coreapplogicstyles/demopage.css\"\r\nimport { motion } from \"framer-motion\";\r\n\r\n\r\nclass Demo extends Component    {\r\n    constructor(props)  {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            evaDecFilter: false,\r\n            isArchiveOn: false,\r\n            isEvaModalOpen: false,\r\n            isModalOpen: false,\r\n            id: null,\r\n            decSatisfied: null,\r\n            decSolved: null,\r\n            decDiff: null,\r\n            progressBarValue: 0,\r\n            decDiffExplain: \"\",\r\n            rating: 0,\r\n            decTitle: \"\",\r\n            decProblem: \"\",\r\n            decPriority: \"\",\r\n            decSolution: \"\",\r\n            yesSatisfied: \"\",\r\n            noSatisfied: \"\",\r\n            decisions: DECISIONS,\r\n            arcDecs: ARCDECS,\r\n            editMode: false,\r\n            touched: {\r\n                decTitle: false,\r\n                decProblem: false,\r\n                decPriority: false,\r\n                decSolution: false,\r\n            }\r\n        }\r\n\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleDeleteDec = this.handleDeleteDec.bind(this);\r\n        this.editDecision = this.editDecision.bind(this);\r\n        this.switchEditMode = this.switchEditMode.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.resetModal = this.resetModal.bind(this);\r\n        this.toggleEvaModal = this.toggleEvaModal.bind(this);\r\n        this.setDecSat = this.setDecSat.bind(this);\r\n        this.decSatNull = this.decSatNull.bind(this);\r\n        this.ratingChanged = this.ratingChanged.bind(this);\r\n        this.scrollToArc = React.createRef();\r\n        this.scrolltoDec = React.createRef();\r\n        this.handleArcClick = this.handleArcClick.bind(this);\r\n        this.setArcOnTrue = this.setArcOnTrue.bind(this);\r\n        this.handleDecClick = this.handleDecClick.bind(this);\r\n        this.handleEvaluateSubmit = this.handleEvaluateSubmit.bind(this);\r\n        this.getEvaluatedDecision = this.getEvaluatedDecision.bind(this);\r\n        this.setEvaDecTrue = this.setEvaDecTrue.bind(this);\r\n    }\r\n\r\n    handleBlur = (field) => () =>   {\r\n        this.setState({\r\n            touched: {...this.state.touched, [field]: true}\r\n        });\r\n    }\r\n    \r\n    validate(decTitle, decProblem, decSolution, decPriority)  {\r\n        const errors = {\r\n            decTitle: \"\",\r\n            decProblem: \"\",\r\n            decSolution: \"\",\r\n            decPriority: \"\"\r\n        }\r\n\r\n        if (this.state.touched.decTitle)   {\r\n            if (decTitle.length < 10)   {\r\n                errors.decTitle = \"Decision title must be at least 10 characters.\"\r\n            } \r\n        }\r\n\r\n        if (this.state.touched.decProblem)    {\r\n            if (decProblem.length < 10)   {\r\n                errors.decProblem = \"Decision problem must be at least 10 characters.\"\r\n            }  \r\n        }\r\n\r\n        if(this.state.touched.decSolution)  {\r\n            if(decSolution.length < 10)  {\r\n                errors.decSolution = \"Decision solution must be at least 10 characters.\"\r\n            }\r\n        }\r\n\r\n        if(this.state.touched.decProblem)   {\r\n            if(decPriority)    {\r\n                errors.decPriority = \"Please set your decision priority\"\r\n            }\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n\r\n    setEvaDecTrue() {\r\n        this.setState({\r\n            evaDecFilter: true,\r\n            setArcOnTrue: false\r\n        });\r\n    }\r\n\r\n    getEvaluatedDecision(decision)  {\r\n        this.setState({\r\n            id: decision.id,\r\n            decTitle: decision.decTitle,\r\n            decProblem: decision.decProblem,\r\n            decPriority: decision.decPriority,\r\n            decSolution: decision.decSolution,\r\n            progressBarValue: 0\r\n        });\r\n        console.log(this.state);\r\n    }\r\n\r\n    handleEvaluateSubmit(e) {\r\n        e.preventDefault();\r\n        const decToBeDel = this.state.decisions.filter(decision => decision.id === this.state.id)[0];\r\n        const newDecs = this.state.decisions.filter(decision => decision.id !== decToBeDel.id);\r\n        const arcDec = {\r\n            id: Date.now(),\r\n            decTitle: this.state.decTitle,\r\n            decProblem: this.state.decProblem,\r\n            decPriority: this.state.decPriority,\r\n            decSolution: this.state.decSolution,\r\n            decSatisfied: this.state.decSatisfied,\r\n            decSolved: this.state.decSolved,\r\n            decDiff: this.state.decDiff,\r\n            decDiffExplain: this.state.decDiffExplain,\r\n            rating: this.state.rating\r\n\r\n        }\r\n\r\n        this.setState(state => ({\r\n            isArchiveOn: false,\r\n            isEvaModalOpen: false,\r\n            isModalOpen: false,\r\n            id: null,\r\n            decSatisfied: null,\r\n            decSolved: null,\r\n            decDiff: null,\r\n            progressBarValue: 0,\r\n            decDiffExplain: \"\",\r\n            rating: 0,\r\n            decTitle: \"\",\r\n            decProblem: \"\",\r\n            decPriority: \"\",\r\n            decSolution: \"\",\r\n            yesSatisfied: \"\",\r\n            noSatisfied: \"\",\r\n            decisions: newDecs,\r\n            editMode: false,\r\n            touched: {\r\n                decTitle: false,\r\n                decProblem: false,\r\n                decPriority: false,\r\n                decSolution: false,\r\n                yesSatisfied: false,\r\n                noSatisfied: false\r\n            },\r\n            arcDecs: this.state.arcDecs.concat(arcDec)\r\n        }));\r\n\r\n        console.log(this.state.arcDecs)\r\n    }\r\n\r\n    setArcOnTrue()  {\r\n        this.setState({\r\n            isArchiveOn: true,\r\n            evaDecFilter: false\r\n        });\r\n    }\r\n\r\n    handleDecClick(e)   {\r\n        if(this.scrolltoDec.current)    {\r\n            this.scrolltoDec.current.scrollIntoView({\r\n                behavior: \"smooth\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleArcClick(e)   {\r\n        if(this.scrollToArc.current)    {\r\n            this.scrollToArc.current.scrollIntoView({\r\n                behavior: \"smooth\",\r\n                block: \"nearest\"\r\n            });\r\n        }\r\n        this.setState({\r\n            isArchiveOn: true,\r\n            evaDecFilter: false\r\n        })\r\n    }\r\n\r\n    ratingChanged(newRating)    {\r\n        this.setState({\r\n            rating: newRating\r\n        });\r\n        console.log(this.state.rating)\r\n    }\r\n\r\n    handleBlur = (field) => () =>   {\r\n        this.setState({\r\n            touched: {...this.state.touched, [field]: true}\r\n        });\r\n        console.log(this.state.touched.yesSatisfied)\r\n    }\r\n\r\n    decSatNull()    {\r\n        this.setState({\r\n            ...this.state, \r\n            decSatisfied: null,\r\n            decSolved: null,\r\n            decDiff: null,\r\n            decDiffExplain: \"\"\r\n        })\r\n    }\r\n\r\n    handleEdit(e)   {\r\n        e.preventDefault();\r\n\r\n        const decs = [...this.state.decisions];\r\n        let index = decs.findIndex(dec => dec.id === this.state.id);\r\n        decs[index] = {\r\n            id: this.state.id,\r\n            decTitle: this.state.decTitle,\r\n            decProblem: this.state.decProblem,\r\n            decPriority: this.state.decPriority,\r\n            decSolution: this.state.decSolution\r\n        }\r\n        this.setState({...this.state,\r\n            editMode: false,\r\n            id: null,\r\n            decTitle: \"\",\r\n            decProblem: \"\",\r\n            decPriority: \"\",\r\n            decSolution: \"\", \r\n            decisions: decs});\r\n        console.log(this.state.decisions)\r\n    }\r\n\r\n    resetModal()    {\r\n        this.setState({\r\n            ...this.state,\r\n            isEvaModelOpen: false,\r\n            isModalOpen: false,\r\n            id: null,\r\n            decTitle: \"\",\r\n            decProblem: \"\",\r\n            decPriority: \"\",\r\n            decSolution: \"\",\r\n            editMode: false,\r\n            touched: {\r\n                decTitle: \"\",\r\n                decProblem: \"\",\r\n                decPriority: \"\",\r\n                decSolution: \"\"\r\n            }\r\n        });\r\n\r\n        console.log(this.state)\r\n    }\r\n\r\n    switchEditMode()    {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    editDecision(decision)  {\r\n        this.toggleModal();\r\n        this.setState({\r\n            id: decision.id,\r\n            decTitle: decision.decTitle,\r\n            decProblem: decision.decProblem,\r\n            decPriority: decision.decPriority,\r\n            decSolution: decision.decSolution\r\n        });\r\n        \r\n    }\r\n\r\n    handleDeleteDec(id) {\r\n        const filteredDecs = this.state.decisions.filter(decision => {return(decision.id !== id)});\r\n        this.setState({\r\n            decisions: filteredDecs\r\n        });\r\n    }\r\n\r\n    toggleModal()   {\r\n        this.setState({isModalOpen: !this.state.isModalOpen});\r\n    }\r\n\r\n    toggleEvaModal()    {\r\n        this.setState({isEvaModalOpen: !this.state.isEvaModalOpen});\r\n    }\r\n\r\n    setDecSat(e)  {\r\n        const value = e.target.value\r\n        const name = e.target.name\r\n        this.setState( state => ({\r\n            ...this.state, [name]: value\r\n        }));\r\n        console.log(\"decSatisfied\" + this.state.decSatisfied)\r\n        console.log(\"decSolved\" + this.state.decSolved)\r\n    }\r\n\r\n    handleClick(e)  {\r\n        const value = e.target.value\r\n        e.preventDefault();\r\n        this.setState( state => ({\r\n            ...this.state, decPriority: value\r\n        }));\r\n    }\r\n\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n\r\n        this.setState({...this.state,\r\n            [name]: value\r\n        });\r\n        console.log(this.state.decDiffExplain)\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const newDec = {\r\n            decTitle: this.state.decTitle,\r\n            decProblem: this.state.decProblem,\r\n            decPriority: this.state.decPriority,\r\n            decSolution: this.state.decSolution,\r\n            id: Date.now()\r\n        }\r\n\r\n        this.setState(state => ({\r\n            id: null,\r\n            decTitle: \"\",\r\n            decProblem: \"\",\r\n            decPriority: \"\",\r\n            decSolution: \"\",\r\n            decisions: this.state.decisions.concat(newDec)\r\n        }));\r\n    }\r\n\r\n    render()    {\r\n\r\n        const errors = this.validate(this.state.decTitle, this.state.decProblem, this.state.decSolution, this.state.decPriority);\r\n        const pageTransition = {\r\n            in: {\r\n                opacity: 1,\r\n                x: 0\r\n            },\r\n            out: {\r\n                opacity: 0,\r\n                x: \"-5%\"\r\n            }\r\n        }\r\n\r\n        return(\r\n                <motion.div exit=\"out\" animate=\"in\" initial=\"out\" variants={pageTransition} ref={this.scrolltoDec} className=\"container-fluid stripe-z\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col mt-3\"><Button className=\"addDecButton btn navButtons-box col-md-12 fontBold text-black\">Current Decisions</Button></div>\r\n                        <div className=\"col mt-3\"><Button onClick={this.handleArcClick} className=\"addDecButton btn navButtons-box col-md-12 fontBold text-black\">Archived Decisions</Button></div>\r\n                        <div className=\"col mt-3\"><Button onClick={this.setEvaDecTrue} className=\"addDecButton btn navButtons-box col-md-12 fontBold text-black\">Evaluate DM Skills</Button></div>\r\n                    </div>\r\n                    <div className=\"row pt-0\">\r\n                        <div className=\"col-md-6 mar-y decisionCol\">\r\n                            <h2 className=\"text-center text-white gray-box py-2\">Current Decisions</h2>\r\n                        </div>\r\n                        <div className=\"col-md-6 mar-y decisionCol\">\r\n                            <Button onClick={() => {\r\n                                this.resetModal();\r\n                                this.toggleModal();\r\n                            }} size=\"lg\" className=\"addDecButton btn-yellow addDecButton-btn-scale col-md-12\"><i className=\"fa fa-plus fa-lg text-black\" /></Button>\r\n                        </div>\r\n                    </div>\r\n                    <DecCom decisions={this.state.decisions}\r\n                            handleDeleteDec={this.handleDeleteDec}\r\n                            editDecision={this.editDecision}\r\n                            editMode={this.switchEditMode}\r\n                            toggleEvaModal={this.toggleEvaModal}\r\n                            getEvaluatedDecision={this.getEvaluatedDecision}\r\n                    />\r\n                    <React.Fragment>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} size=\"lg\">\r\n                        <ModalHeader className=\"btn-yellow border-bottom-0\" toggle={this.toggleModal}>{this.state.editMode ? \"Edit The Decision\" : \"Create a new decision\"}</ModalHeader>\r\n                        <ModalBody className=\"modalBodyColor\">\r\n                            <Form onSubmit={ this.state.editMode ? this.handleEdit : this.handleSubmit}>\r\n                                <FormGroup row>\r\n                                    <Label md={4} htmlFor=\"decTitle\" className=\"pt-0 text-white\">Decision Name</Label>\r\n                                    <Col>\r\n                                    <Input\r\n                                        className=\"form-control-custom\"\r\n                                        md={8}\r\n                                        type=\"text\"\r\n                                        name=\"decTitle\" \r\n                                        id=\"decTitle\" \r\n                                        placeholder=\"Please name your decision\" \r\n                                        onChange={this.handleChange}\r\n                                        value={this.state.decTitle}\r\n                                        autoComplete=\"off\"\r\n                                        onBlur={this.handleBlur(\"decTitle\")}\r\n                                        invalid={errors.decTitle.length > 0}\r\n                                    />\r\n                                    <FormFeedback>{errors.decTitle}</FormFeedback>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label md={4} htmlFor=\"decBody\" className=\"pt-0 text-white\">Problem</Label>\r\n                                    <Col md={8}>\r\n                                    <Input \r\n                                        className=\"form-control-custom\"\r\n                                        type=\"textarea\" \r\n                                        name=\"decProblem\" \r\n                                        id=\"decProblem\" \r\n                                        placeholder=\"Please describe your problem\" \r\n                                        onChange={this.handleChange}\r\n                                        value={this.state.decProblem}\r\n                                        autoComplete=\"off\"\r\n                                        onBlur={this.handleBlur(\"decProblem\")}\r\n                                        invalid={errors.decProblem.length > 0}\r\n                                    />\r\n                                    <FormFeedback>{errors.decProblem}</FormFeedback>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label md={4} htmlFor=\"decSolution\" className=\"pt-0 text-white\">Solution</Label>\r\n                                    <Col md={8}>\r\n                                    <Input \r\n                                        className=\"form-control-custom\"\r\n                                        type=\"textarea\" \r\n                                        name=\"decSolution\" \r\n                                        id=\"decSolution\" \r\n                                        placeholder=\"Please write your solution\" \r\n                                        onChange={this.handleChange}\r\n                                        value={this.state.decSolution}\r\n                                        autoComplete=\"off\"\r\n                                        onBlur={this.handleBlur(\"decSolution\")}\r\n                                        invalid={errors.decSolution.length > 0}\r\n                                    />\r\n                                    <FormFeedback>{errors.decSolution}</FormFeedback>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label md={4} htmlFor=\"decPriority\" className=\"pt-0 text-white\">Decision Priority</Label>\r\n                                    <Col md={8}>\r\n                                        <ButtonGroup size=\"sm\">\r\n                                            <Button\r\n                                            type=\"radio\"\r\n                                            onClick={this.handleClick}\r\n                                            className=\"btn-success\"\r\n                                            name=\"decPriority\"\r\n                                            value=\"low\"\r\n                                            onBlur={this.handleBlur(\"decPriority\")}\r\n                                            invalid={errors.decPriority}>\r\n                                            Low\r\n                                            </Button>\r\n                                            <Button\r\n                                            type=\"radio\"\r\n                                            onClick={this.handleClick}\r\n                                            className=\"btn-yellow text-black\"\r\n                                            name=\"decPriority\"\r\n                                            value=\"mid\"\r\n                                            onBlur={this.handleBlur(\"decPriority\")}\r\n                                            invalid={errors.decPriority}>\r\n                                            Mid\r\n                                            </Button>\r\n                                            <Button \r\n                                            type=\"radio\"\r\n                                            onClick={this.handleClick}\r\n                                            className=\"btn-danger\"\r\n                                            name=\"decPriority\"\r\n                                            value=\"high\"\r\n                                            onBlur={this.handleBlur(\"decPriority\")}\r\n                                            invalid={errors.decPriority}>\r\n                                            High\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                        <FormFeedback>{errors.decPriority}</FormFeedback>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                {this.state.decTitle.length >= 10 && this.state.decProblem.length >10 && this.state.decSolution.length >= 10 && this.state.decPriority !== \"\" ? \r\n                                <Button onClick={() => {\r\n                                    this.toggleModal();\r\n                                    }} type=\"submit\" className=\"btn-yellow text-black\" value=\"submit\">{this.state.editMode ? \"Update\" : \"Submit\"}\r\n                                </Button> :\r\n                                <Button disabled>Submit</Button>}\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                    </React.Fragment>\r\n\r\n                    <React.Fragment>\r\n                        <Modal onClosed={this.decSatNull} isOpen={this.state.isEvaModalOpen} toggle={this.toggleEvaModal} size=\"lg\">\r\n                            <ModalHeader className=\"btn-yellow border-bottom-0\" toggle={this.toggleEvaModal}>Evaluate Decision</ModalHeader>\r\n                            <ModalBody className=\"modalBodyColor\">\r\n                                <Form onSubmit={this.handleEvaluateSubmit}>\r\n                                    <FormGroup row>\r\n                                        <Label className=\"text-white\" md={7} htmlFor=\"decSatisfied\" check>Are you satisfied with your decision?</Label>\r\n                                        <Col className=\"align-self-center\" md={2}>\r\n                                            <Input className=\"mr-0\" onClick={(e) => {this.setDecSat(e)}} value=\"yes\" name=\"decSatisfied\" type=\"radio\" /><span className=\"text-white\">Yes</span>\r\n                                        </Col>\r\n                                        <Col className=\"align-self-center\" md={2}>\r\n                                            <Input onClick={(e) => {this.setDecSat(e)}} value=\"no\" name=\"decSatisfied\" type=\"radio\" /><span className=\"text-white\">No</span>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    { this.state.decSatisfied === \"yes\" || this.state.decSatisfied === \"no\" ? <FormGroup row>\r\n                                        <Label className=\"text-white\" md={7} htmlFor=\"yesSatisfied\">Were you able to solve your problem with this decision?</Label>\r\n                                        <Col className=\"align-self-center\" md={2}>\r\n                                            <Input className=\"mr-0\" onClick={(e) => {this.setDecSat(e)}} value=\"yes\" name=\"decSolved\" type=\"radio\" /><span className=\"text-white\">Yes</span>\r\n                                        </Col>\r\n                                        <Col className=\"align-self-center\" md={2}>\r\n                                            <Input onClick={(e) => {this.setDecSat(e)}} value=\"no\" name=\"decSolved\" type=\"radio\" /><span className=\"text-white\">No</span>\r\n                                        </Col>\r\n                                    </FormGroup> : <div /> }\r\n                                    { this.state.decSolved === \"yes\" || this.state.decSolved === \"no\"  ? <FormGroup row>\r\n                                        <Label className=\"text-white\" md={7} htmlFor=\"decDiff\">Is there anything you would have done differently?</Label>\r\n                                        <Col className=\"align-self-center\" md={2}>\r\n                                            <Input className=\"mr-0\" onClick={(e) => {this.setDecSat(e)}} value=\"yes\" name=\"decDiff\" type=\"radio\" /><span className=\"text-white\">Yes</span>\r\n                                        </Col>\r\n                                        <Col className=\"align-self-center\" md={2}>\r\n                                            <Input onClick={(e) => {this.setDecSat(e)}} value=\"no\" name=\"decDiff\" type=\"radio\" /><span className=\"text-white\">No</span>\r\n                                        </Col>\r\n                                    </FormGroup> : <div /> }\r\n                                    { this.state.decDiff === \"yes\" || this.state.decDiff === \"no\" ? <FormGroup row>\r\n                                        <Label className=\"text-white\" md={7} htmlFor=\"decDiffExplain\">Please explain</Label>\r\n                                        <Col className=\"pl-0\">\r\n                                            <Input value={this.state.decDiffExplain} onChange={(e) => {this.handleChange(e)}} className=\"form-control-custom\" type=\"textarea\" name=\"decDiffExplain\" placeholder=\"Provide a detailed explanation\"/>\r\n                                        </Col>\r\n                                    </FormGroup> : <div /> }\r\n                                    { this.state.decDiff === \"yes\" || this.state.decDiff === \"no\" ? <FormGroup row>\r\n                                        <Label className=\"text-white\" md={7} htmlFor=\"rating\">Please rate your decision</Label>\r\n                                        <Col className=\"pl-0\">\r\n                                        <ReactStars\r\n                                            count={5}\r\n                                            onChange={(newRating) => {this.ratingChanged(newRating)}}\r\n                                            size={30}\r\n                                            activeColor=\"#ffd700\"\r\n                                        />\r\n                                        </Col>\r\n                                    </FormGroup> : <div /> }\r\n                                    { this.state.decSatisfied !== null && \r\n                                      this.state.decSolved !== null && \r\n                                      this.state.decDiff !== null && \r\n                                      this.state.rating !== 0 ? \r\n                                      <Button className=\"btn-yellow text-black\">Archive Decision</Button> : \r\n                                      <Button disabled >Archive Decision</Button>}\r\n                                </Form>\r\n                            </ModalBody>\r\n                        </Modal>\r\n                    </React.Fragment>\r\n                    <div>\r\n                        { this.state.isArchiveOn ? \r\n                        <div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col mt-3\"><Button onClick={this.handleDecClick} className=\"addDecButton btn navButtons-box col-md-12 fontBold text-black\">Current Decisions</Button></div>\r\n                        <div className=\"col mt-3\"><Button onClick={this.handleArcClick} className=\"addDecButton btn navButtons-box col-md-12 fontBold text-black\">Archived Decisions</Button></div>\r\n                        <div className=\"col mt-3\"><Button onClick={this.setEvaDecTrue} className=\"addDecButton btn navButtons-box col-md-12 fontBold text-black\">Evaluate DM Skills</Button></div>\r\n                        </div>\r\n                        <div ref={this.scrollToArc} className=\"row\">\r\n                        { this.state.evaDecFilter ? \r\n                        \r\n                            <EvaDec decisions={this.state.decisions} arcDecs={this.state.arcDecs} /> : \r\n                            <div className=\"col-12\">\r\n                                <Archive \r\n                                    arcDecs={this.state.arcDecs}\r\n                                />\r\n                            </div> }\r\n                        \r\n                        </div>\r\n                        </div> : \r\n                        <div />}\r\n                    </div>\r\n                </motion.div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Demo;","import React from \"react\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport Demo from \"../coreapplogic/DemoPageComponent\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nfunction Main(){\r\n        return(\r\n            <div>\r\n                <Header />\r\n                <AnimatePresence exitBeforeEnter>\r\n                    <Switch>\r\n                    <Route path=\"/home\" component={Home} />\r\n                    <Route exact path=\"/aboutus\" component={About} />\r\n                    <Route exact path=\"/demo\" component={Demo} />\r\n                    <Route exact path=\"/contactus\" component={Contact} />\r\n                    <Redirect to=\"/home\" />\r\n                    </Switch>\r\n                </AnimatePresence>\r\n                <Footer />\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport Main from \"./components/MainComponent\"\nimport { BrowserRouter } from \"react-router-dom\";\nimport './App.css';\n\n\nclass App extends Component{\nrender()  {\n  return(\n    <BrowserRouter>\n      <div>\n        <Main />\n      </div>\n    </BrowserRouter>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap-social/bootstrap-social.css\";\nimport \"../node_modules/font-awesome/css/font-awesome.css\"\nimport \"../node_modules/react-bootstrap\"\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}